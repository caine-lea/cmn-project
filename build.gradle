apply from: file('gradle/project.gradle')

subprojects {
    apply from: file("${rootDir}/gradle/check.gradle")

    group = 'core.aws'
    version = '1.9.9.1'
}

def awsVersion = '1.11.683'
def junitVersion = '5.4.2'

project(':cmn') {
    apply plugin: 'application'
    mainClassName = 'Main'

    startScripts {
        defaultJvmOpts = ['-Dcmn.ansible=APP_HOME_VAR/ansible']

        doLast {
            windowsScript.text = windowsScript.text.replaceFirst('APP_HOME_VAR', '%APP_HOME%')
            unixScript.text = unixScript.text.replaceFirst('APP_HOME_VAR', '\\$APP_HOME')
        }
    }

    dependencies {
        implementation "com.amazonaws:aws-java-sdk-autoscaling:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-ec2:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-elasticloadbalancing:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-elasticloadbalancingv2:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-cloudwatch:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-iam:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-s3:${awsVersion}"
        implementation "com.amazonaws:aws-java-sdk-ecr:${awsVersion}"
        implementation "org.slf4j:slf4j-api:1.7.26"
        implementation 'org.slf4j:jcl-over-slf4j:1.7.26'
        implementation 'ch.qos.logback:logback-classic:1.2.3'
        implementation 'com.jcraft:jsch:0.1.55'
        implementation 'org.apache.commons:commons-compress:1.18'
        implementation 'org.yaml:snakeyaml:1.24'

        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation 'org.mockito:mockito-core:2.19.0'
        testImplementation 'org.assertj:assertj-core:3.10.0'

        testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    }
}
